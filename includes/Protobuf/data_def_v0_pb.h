/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.5 */

#ifndef PB_SIMPLE_PB_H_INCLUDED
#define PB_SIMPLE_PB_H_INCLUDED
#include <includes/Protobuf/pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
typedef enum _AnalogRange { 
    AnalogRange_ZERO_5V = 0, 
    AnalogRange_ZERO5_5V = 1 
} AnalogRange;

typedef enum _PhysicalDimension { 
    PhysicalDimension_TIME = 0, 
    PhysicalDimension_LENGTH = 1, 
    PhysicalDimension_WEIGHT = 2, 
    PhysicalDimension_TEMPERATURE = 3, 
    PhysicalDimension_SPEED = 4, 
    PhysicalDimension_AREA = 5, 
    PhysicalDimension_VOLUME = 6, 
    PhysicalDimension_ROTATION_SPEED = 7, 
    PhysicalDimension_VOLTAGE = 8, 
    PhysicalDimension_CURRENT = 9, 
    PhysicalDimension_FREQUENCY = 10, 
    PhysicalDimension_FORCE = 11 
} PhysicalDimension;

typedef enum _DigitalEvent { 
    DigitalEvent_NONE = 0, 
    DigitalEvent_HIGH = 1, 
    DigitalEvent_LOW = 2 
} DigitalEvent;

typedef enum _TimerDataType { 
    TimerDataType_FREQUENCY_VALUE = 0, 
    TimerDataType_PULSE_COUNTER_PERIOD = 1, 
    TimerDataType_PULSE_COUNTER_TOTAL = 2 
} TimerDataType;

typedef enum _MessageType { 
    MessageType_EVENTS = 0, 
    MessageType_STATISTICS = 1, 
    MessageType_HISTORY = 2 
} MessageType;

/* Struct definitions */
typedef struct _AnalogInputConfiguration { 
    float offset; 
    float multiplier; 
    PhysicalDimension phy_dimension; 
    bool has_min_alarm_threshold;
    float min_alarm_threshold; 
    bool has_max_alarm_threshold;
    float max_alarm_threshold; 
} AnalogInputConfiguration;

typedef struct _DigitalInputConfiguration { 
    bool has_high_label;
    char high_label[80]; 
    bool has_low_label;
    char low_label[80]; 
    bool has_alarm;
    DigitalEvent alarm; 
    bool has_error;
    DigitalEvent error; 
    bool has_type;
    TimerDataType type; 
    bool has_phy_dimension;
    PhysicalDimension phy_dimension; 
    bool has_min_alarm_threshold;
    float min_alarm_threshold; 
    bool has_max_alarm_threshold;
    float max_alarm_threshold; 
} DigitalInputConfiguration;

typedef struct _Event { 
    int32_t timestamp; 
    uint32_t source_id; /* Source ID table */
    int32_t code; 
    uint32_t value; 
} Event;

typedef struct _InputValue { 
    int32_t timestamp; 
    float value; 
} InputValue;

typedef struct _MQTTConfiguration { 
    char username[80]; 
    char password[80]; 
} MQTTConfiguration;

typedef struct _Position { 
    int32_t timestamp; 
    float latitude; 
    float longitude; 
} Position;

typedef struct _Statistics { 
    int32_t timestamp; 
    /* Ore lavoro macchina */
    uint32_t current_session_working_time; 
    uint32_t current_daily_working_time; 
    uint32_t total_working_time; 
    uint32_t daily_working_times_vector[24]; /* 24 elementi */
    uint32_t work_times_vector[24]; /* 24 elementi */
    /* Ettari lavorati */
    uint32_t last_hour_worked_area; 
    uint32_t current_session_worked_area; 
    uint32_t current_daily_worked_area; 
    uint32_t total_worked_area; 
    uint32_t daily_working_time_slots[24]; /* 24 elementi */
    uint32_t worked_area_by_time_slots[24]; /* 24 elementi */
    /* Velocit√† media di lavoro */
    uint32_t working_speed[32]; /* 32 elementi */
    /* Regime rotazione PTO */
    uint32_t gear_box_rpm[32]; /* 32 elementi */
} Statistics;

typedef struct _TemperatureInputConfiguration { 
    float A_parameter; 
    float B_parameter; 
    float C_parameter; 
    bool has_min_alarm_threshold;
    float min_alarm_threshold; 
    bool has_max_alarm_threshold;
    float max_alarm_threshold; 
} TemperatureInputConfiguration;

typedef struct _Timestamp { 
    int64_t seconds; 
    int32_t nanos; 
} Timestamp;

typedef struct _Events { 
    Event events[1]; 
} Events;

typedef struct _InputConfiguration { 
    uint32_t input_id; /* Source ID table */
    char label[100]; 
    uint32_t acquisition_period; 
    bool enable; 
    pb_size_t which_Configuration;
    union {
        AnalogInputConfiguration analog_input_configuration;
        DigitalInputConfiguration digital_input_configuration;
        TemperatureInputConfiguration temperature_input_configuration;
    } Configuration; /* type = ANALOG */
} InputConfiguration;

/* HERE NEEDS TO PUT THE SIZE CORRECTLY - USED 10 ONLY FOR TEST */
typedef struct _InputData { 
    uint32_t input_id; /* Source ID table */
    bool enable; 
    bool has_label;
    char label[20]; 
    bool has_phy_dimension;
    PhysicalDimension phy_dimension; 
    InputValue values[12]; 
} InputData;

/* Configurazione dispositivo */
typedef struct _Configuration { 
    char pin_level_0[100]; 
    char pin_level_1[100]; 
    bool has_MQTT_conf;
    MQTTConfiguration MQTT_conf; 
    bool has_mqtt_periodic_send_powered;
    uint32_t mqtt_periodic_send_powered; /* Secondi */
    bool has_mqtt_periodic_send_battery;
    uint32_t mqtt_periodic_send_battery; /* Secondi */
    uint32_t gnss_acquisition_period_powered; /* Secondi */
    uint32_t gnss_acquisition_period_battery; /* Secondi */
    uint32_t working_time_source_id; /* Source ID */
    float working_width; /* Metri */
    bool has_timestamp;
    Timestamp timestamp; /* Setta orologio interno */
    float time_zone; 
    bool en_savings_time; /* Abilita cambio ora legale/solare */
    uint32_t internal_temperature_acquisition_period; 
    InputConfiguration input_configuration[1]; /* one for each input */
} Configuration;

typedef struct _History { 
    int32_t timestamp; 
    Position positions[12]; 
    InputValue device_internal_temperatures[12]; 
    InputData input_data[6]; /* one for each input */
} History;

typedef struct _UplinkMessage { 
    MessageType type; 
    pb_size_t which_Data;
    union {
        History history;
        Statistics statistics;
        Events events;
    } Data; /* type = HISTORY */
} UplinkMessage;


/* Helper constants for enums */
#define _AnalogRange_MIN AnalogRange_ZERO_5V
#define _AnalogRange_MAX AnalogRange_ZERO5_5V
#define _AnalogRange_ARRAYSIZE ((AnalogRange)(AnalogRange_ZERO5_5V+1))

#define _PhysicalDimension_MIN PhysicalDimension_TIME
#define _PhysicalDimension_MAX PhysicalDimension_FORCE
#define _PhysicalDimension_ARRAYSIZE ((PhysicalDimension)(PhysicalDimension_FORCE+1))

#define _DigitalEvent_MIN DigitalEvent_NONE
#define _DigitalEvent_MAX DigitalEvent_LOW
#define _DigitalEvent_ARRAYSIZE ((DigitalEvent)(DigitalEvent_LOW+1))

#define _TimerDataType_MIN TimerDataType_FREQUENCY_VALUE
#define _TimerDataType_MAX TimerDataType_PULSE_COUNTER_TOTAL
#define _TimerDataType_ARRAYSIZE ((TimerDataType)(TimerDataType_PULSE_COUNTER_TOTAL+1))

#define _MessageType_MIN MessageType_EVENTS
#define _MessageType_MAX MessageType_HISTORY
#define _MessageType_ARRAYSIZE ((MessageType)(MessageType_HISTORY+1))


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define Timestamp_init_default                   {0, 0}
#define Position_init_default                    {0, 0, 0}
#define InputValue_init_default                  {0, 0}
#define Event_init_default                       {0, 0, 0, 0}
#define MQTTConfiguration_init_default           {"", ""}
#define AnalogInputConfiguration_init_default    {0, 0, _PhysicalDimension_MIN, false, 0, false, 0}
#define DigitalInputConfiguration_init_default   {false, "", false, "", false, _DigitalEvent_MIN, false, _DigitalEvent_MIN, false, _TimerDataType_MIN, false, _PhysicalDimension_MIN, false, 0, false, 0}
#define TemperatureInputConfiguration_init_default {0, 0, 0, false, 0, false, 0}
#define InputData_init_default                   {0, 0, false, "", false, _PhysicalDimension_MIN, {InputValue_init_default, InputValue_init_default, InputValue_init_default, InputValue_init_default, InputValue_init_default, InputValue_init_default, InputValue_init_default, InputValue_init_default, InputValue_init_default, InputValue_init_default, InputValue_init_default, InputValue_init_default}}
#define History_init_default                     {0, {Position_init_default, Position_init_default, Position_init_default, Position_init_default, Position_init_default, Position_init_default, Position_init_default, Position_init_default, Position_init_default, Position_init_default, Position_init_default, Position_init_default}, {InputValue_init_default, InputValue_init_default, InputValue_init_default, InputValue_init_default, InputValue_init_default, InputValue_init_default, InputValue_init_default, InputValue_init_default, InputValue_init_default, InputValue_init_default, InputValue_init_default, InputValue_init_default}, {InputData_init_default, InputData_init_default, InputData_init_default, InputData_init_default, InputData_init_default, InputData_init_default}}
#define Events_init_default                      {{Event_init_default}}
#define Statistics_init_default                  {0, 0, 0, 0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 0, 0, 0, 0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}
#define InputConfiguration_init_default          {0, "", 0, 0, 0, {AnalogInputConfiguration_init_default}}
#define Configuration_init_default               {"", "", false, MQTTConfiguration_init_default, false, 0, false, 0, 0, 0, 0, 0, false, Timestamp_init_default, 0, 0, 0, {InputConfiguration_init_default}}
#define UplinkMessage_init_default               {_MessageType_MIN, 0, {History_init_default}}
#define Timestamp_init_zero                      {0, 0}
#define Position_init_zero                       {0, 0, 0}
#define InputValue_init_zero                     {0, 0}
#define Event_init_zero                          {0, 0, 0, 0}
#define MQTTConfiguration_init_zero              {"", ""}
#define AnalogInputConfiguration_init_zero       {0, 0, _PhysicalDimension_MIN, false, 0, false, 0}
#define DigitalInputConfiguration_init_zero      {false, "", false, "", false, _DigitalEvent_MIN, false, _DigitalEvent_MIN, false, _TimerDataType_MIN, false, _PhysicalDimension_MIN, false, 0, false, 0}
#define TemperatureInputConfiguration_init_zero  {0, 0, 0, false, 0, false, 0}
#define InputData_init_zero                      {0, 0, false, "", false, _PhysicalDimension_MIN, {InputValue_init_zero, InputValue_init_zero, InputValue_init_zero, InputValue_init_zero, InputValue_init_zero, InputValue_init_zero, InputValue_init_zero, InputValue_init_zero, InputValue_init_zero, InputValue_init_zero, InputValue_init_zero, InputValue_init_zero}}
#define History_init_zero                        {0, {Position_init_zero, Position_init_zero, Position_init_zero, Position_init_zero, Position_init_zero, Position_init_zero, Position_init_zero, Position_init_zero, Position_init_zero, Position_init_zero, Position_init_zero, Position_init_zero}, {InputValue_init_zero, InputValue_init_zero, InputValue_init_zero, InputValue_init_zero, InputValue_init_zero, InputValue_init_zero, InputValue_init_zero, InputValue_init_zero, InputValue_init_zero, InputValue_init_zero, InputValue_init_zero, InputValue_init_zero}, {InputData_init_zero, InputData_init_zero, InputData_init_zero, InputData_init_zero, InputData_init_zero, InputData_init_zero}}
#define Events_init_zero                         {{Event_init_zero}}
#define Statistics_init_zero                     {0, 0, 0, 0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 0, 0, 0, 0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}
#define InputConfiguration_init_zero             {0, "", 0, 0, 0, {AnalogInputConfiguration_init_zero}}
#define Configuration_init_zero                  {"", "", false, MQTTConfiguration_init_zero, false, 0, false, 0, 0, 0, 0, 0, false, Timestamp_init_zero, 0, 0, 0, {InputConfiguration_init_zero}}
#define UplinkMessage_init_zero                  {_MessageType_MIN, 0, {History_init_zero}}

/* Field tags (for use in manual encoding/decoding) */
#define AnalogInputConfiguration_offset_tag      2
#define AnalogInputConfiguration_multiplier_tag  3
#define AnalogInputConfiguration_phy_dimension_tag 4
#define AnalogInputConfiguration_min_alarm_threshold_tag 5
#define AnalogInputConfiguration_max_alarm_threshold_tag 6
#define DigitalInputConfiguration_high_label_tag 2
#define DigitalInputConfiguration_low_label_tag  3
#define DigitalInputConfiguration_alarm_tag      4
#define DigitalInputConfiguration_error_tag      5
#define DigitalInputConfiguration_type_tag       6
#define DigitalInputConfiguration_phy_dimension_tag 7
#define DigitalInputConfiguration_min_alarm_threshold_tag 8
#define DigitalInputConfiguration_max_alarm_threshold_tag 9
#define Event_timestamp_tag                      1
#define Event_source_id_tag                      2
#define Event_code_tag                           3
#define Event_value_tag                          4
#define InputValue_timestamp_tag                 1
#define InputValue_value_tag                     2
#define MQTTConfiguration_username_tag           1
#define MQTTConfiguration_password_tag           2
#define Position_timestamp_tag                   1
#define Position_latitude_tag                    2
#define Position_longitude_tag                   3
#define Statistics_timestamp_tag                 1
#define Statistics_current_session_working_time_tag 10
#define Statistics_current_daily_working_time_tag 11
#define Statistics_total_working_time_tag        12
#define Statistics_daily_working_times_vector_tag 13
#define Statistics_work_times_vector_tag         14
#define Statistics_last_hour_worked_area_tag     20
#define Statistics_current_session_worked_area_tag 21
#define Statistics_current_daily_worked_area_tag 22
#define Statistics_total_worked_area_tag         23
#define Statistics_daily_working_time_slots_tag  24
#define Statistics_worked_area_by_time_slots_tag 25
#define Statistics_working_speed_tag             30
#define Statistics_gear_box_rpm_tag              40
#define TemperatureInputConfiguration_A_parameter_tag 2
#define TemperatureInputConfiguration_B_parameter_tag 3
#define TemperatureInputConfiguration_C_parameter_tag 4
#define TemperatureInputConfiguration_min_alarm_threshold_tag 5
#define TemperatureInputConfiguration_max_alarm_threshold_tag 6
#define Timestamp_seconds_tag                    1
#define Timestamp_nanos_tag                      2
#define Events_events_tag                        1
#define InputConfiguration_input_id_tag          1
#define InputConfiguration_label_tag             2
#define InputConfiguration_acquisition_period_tag 3
#define InputConfiguration_enable_tag            4
#define InputConfiguration_analog_input_configuration_tag 5
#define InputConfiguration_digital_input_configuration_tag 6
#define InputConfiguration_temperature_input_configuration_tag 7
#define InputData_input_id_tag                   1
#define InputData_enable_tag                     2
#define InputData_label_tag                      3
#define InputData_phy_dimension_tag              4
#define InputData_values_tag                     5
#define Configuration_pin_level_0_tag            1
#define Configuration_pin_level_1_tag            2
#define Configuration_MQTT_conf_tag              3
#define Configuration_mqtt_periodic_send_powered_tag 4
#define Configuration_mqtt_periodic_send_battery_tag 5
#define Configuration_gnss_acquisition_period_powered_tag 6
#define Configuration_gnss_acquisition_period_battery_tag 7
#define Configuration_working_time_source_id_tag 8
#define Configuration_working_width_tag          9
#define Configuration_timestamp_tag              10
#define Configuration_time_zone_tag              11
#define Configuration_en_savings_time_tag        12
#define Configuration_internal_temperature_acquisition_period_tag 13
#define Configuration_input_configuration_tag    20
#define History_timestamp_tag                    1
#define History_positions_tag                    2
#define History_device_internal_temperatures_tag 3
#define History_input_data_tag                   10
#define UplinkMessage_type_tag                   1
#define UplinkMessage_history_tag                2
#define UplinkMessage_statistics_tag             3
#define UplinkMessage_events_tag                 4

/* Struct field encoding specification for nanopb */
#define Timestamp_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT64,    seconds,           1) \
X(a, STATIC,   SINGULAR, INT32,    nanos,             2)
#define Timestamp_CALLBACK NULL
#define Timestamp_DEFAULT NULL

#define Position_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    timestamp,         1) \
X(a, STATIC,   SINGULAR, FLOAT,    latitude,          2) \
X(a, STATIC,   SINGULAR, FLOAT,    longitude,         3)
#define Position_CALLBACK NULL
#define Position_DEFAULT NULL

#define InputValue_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    timestamp,         1) \
X(a, STATIC,   SINGULAR, FLOAT,    value,             2)
#define InputValue_CALLBACK NULL
#define InputValue_DEFAULT NULL

#define Event_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    timestamp,         1) \
X(a, STATIC,   SINGULAR, UINT32,   source_id,         2) \
X(a, STATIC,   SINGULAR, INT32,    code,              3) \
X(a, STATIC,   SINGULAR, UINT32,   value,             4)
#define Event_CALLBACK NULL
#define Event_DEFAULT NULL

#define MQTTConfiguration_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, STRING,   username,          1) \
X(a, STATIC,   SINGULAR, STRING,   password,          2)
#define MQTTConfiguration_CALLBACK NULL
#define MQTTConfiguration_DEFAULT NULL

#define AnalogInputConfiguration_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, FLOAT,    offset,            2) \
X(a, STATIC,   SINGULAR, FLOAT,    multiplier,        3) \
X(a, STATIC,   SINGULAR, UENUM,    phy_dimension,     4) \
X(a, STATIC,   OPTIONAL, FLOAT,    min_alarm_threshold,   5) \
X(a, STATIC,   OPTIONAL, FLOAT,    max_alarm_threshold,   6)
#define AnalogInputConfiguration_CALLBACK NULL
#define AnalogInputConfiguration_DEFAULT NULL

#define DigitalInputConfiguration_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, STRING,   high_label,        2) \
X(a, STATIC,   OPTIONAL, STRING,   low_label,         3) \
X(a, STATIC,   OPTIONAL, UENUM,    alarm,             4) \
X(a, STATIC,   OPTIONAL, UENUM,    error,             5) \
X(a, STATIC,   OPTIONAL, UENUM,    type,              6) \
X(a, STATIC,   OPTIONAL, UENUM,    phy_dimension,     7) \
X(a, STATIC,   OPTIONAL, FLOAT,    min_alarm_threshold,   8) \
X(a, STATIC,   OPTIONAL, FLOAT,    max_alarm_threshold,   9)
#define DigitalInputConfiguration_CALLBACK NULL
#define DigitalInputConfiguration_DEFAULT NULL

#define TemperatureInputConfiguration_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, FLOAT,    A_parameter,       2) \
X(a, STATIC,   SINGULAR, FLOAT,    B_parameter,       3) \
X(a, STATIC,   SINGULAR, FLOAT,    C_parameter,       4) \
X(a, STATIC,   OPTIONAL, FLOAT,    min_alarm_threshold,   5) \
X(a, STATIC,   OPTIONAL, FLOAT,    max_alarm_threshold,   6)
#define TemperatureInputConfiguration_CALLBACK NULL
#define TemperatureInputConfiguration_DEFAULT NULL

#define InputData_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   input_id,          1) \
X(a, STATIC,   SINGULAR, BOOL,     enable,            2) \
X(a, STATIC,   OPTIONAL, STRING,   label,             3) \
X(a, STATIC,   OPTIONAL, UENUM,    phy_dimension,     4) \
X(a, STATIC,   FIXARRAY, MESSAGE,  values,            5)
#define InputData_CALLBACK NULL
#define InputData_DEFAULT NULL
#define InputData_values_MSGTYPE InputValue

#define History_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    timestamp,         1) \
X(a, STATIC,   FIXARRAY, MESSAGE,  positions,         2) \
X(a, STATIC,   FIXARRAY, MESSAGE,  device_internal_temperatures,   3) \
X(a, STATIC,   FIXARRAY, MESSAGE,  input_data,       10)
#define History_CALLBACK NULL
#define History_DEFAULT NULL
#define History_positions_MSGTYPE Position
#define History_device_internal_temperatures_MSGTYPE InputValue
#define History_input_data_MSGTYPE InputData

#define Events_FIELDLIST(X, a) \
X(a, STATIC,   FIXARRAY, MESSAGE,  events,            1)
#define Events_CALLBACK NULL
#define Events_DEFAULT NULL
#define Events_events_MSGTYPE Event

#define Statistics_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    timestamp,         1) \
X(a, STATIC,   SINGULAR, UINT32,   current_session_working_time,  10) \
X(a, STATIC,   SINGULAR, UINT32,   current_daily_working_time,  11) \
X(a, STATIC,   SINGULAR, UINT32,   total_working_time,  12) \
X(a, STATIC,   FIXARRAY, UINT32,   daily_working_times_vector,  13) \
X(a, STATIC,   FIXARRAY, UINT32,   work_times_vector,  14) \
X(a, STATIC,   SINGULAR, UINT32,   last_hour_worked_area,  20) \
X(a, STATIC,   SINGULAR, UINT32,   current_session_worked_area,  21) \
X(a, STATIC,   SINGULAR, UINT32,   current_daily_worked_area,  22) \
X(a, STATIC,   SINGULAR, UINT32,   total_worked_area,  23) \
X(a, STATIC,   FIXARRAY, UINT32,   daily_working_time_slots,  24) \
X(a, STATIC,   FIXARRAY, UINT32,   worked_area_by_time_slots,  25) \
X(a, STATIC,   FIXARRAY, UINT32,   working_speed,    30) \
X(a, STATIC,   FIXARRAY, UINT32,   gear_box_rpm,     40)
#define Statistics_CALLBACK NULL
#define Statistics_DEFAULT NULL

#define InputConfiguration_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   input_id,          1) \
X(a, STATIC,   SINGULAR, STRING,   label,             2) \
X(a, STATIC,   SINGULAR, UINT32,   acquisition_period,   3) \
X(a, STATIC,   SINGULAR, BOOL,     enable,            4) \
X(a, STATIC,   ONEOF,    MESSAGE,  (Configuration,analog_input_configuration,Configuration.analog_input_configuration),   5) \
X(a, STATIC,   ONEOF,    MESSAGE,  (Configuration,digital_input_configuration,Configuration.digital_input_configuration),   6) \
X(a, STATIC,   ONEOF,    MESSAGE,  (Configuration,temperature_input_configuration,Configuration.temperature_input_configuration),   7)
#define InputConfiguration_CALLBACK NULL
#define InputConfiguration_DEFAULT NULL
#define InputConfiguration_Configuration_analog_input_configuration_MSGTYPE AnalogInputConfiguration
#define InputConfiguration_Configuration_digital_input_configuration_MSGTYPE DigitalInputConfiguration
#define InputConfiguration_Configuration_temperature_input_configuration_MSGTYPE TemperatureInputConfiguration

#define Configuration_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, STRING,   pin_level_0,       1) \
X(a, STATIC,   SINGULAR, STRING,   pin_level_1,       2) \
X(a, STATIC,   OPTIONAL, MESSAGE,  MQTT_conf,         3) \
X(a, STATIC,   OPTIONAL, UINT32,   mqtt_periodic_send_powered,   4) \
X(a, STATIC,   OPTIONAL, UINT32,   mqtt_periodic_send_battery,   5) \
X(a, STATIC,   SINGULAR, UINT32,   gnss_acquisition_period_powered,   6) \
X(a, STATIC,   SINGULAR, UINT32,   gnss_acquisition_period_battery,   7) \
X(a, STATIC,   SINGULAR, UINT32,   working_time_source_id,   8) \
X(a, STATIC,   SINGULAR, FLOAT,    working_width,     9) \
X(a, STATIC,   OPTIONAL, MESSAGE,  timestamp,        10) \
X(a, STATIC,   SINGULAR, FLOAT,    time_zone,        11) \
X(a, STATIC,   SINGULAR, BOOL,     en_savings_time,  12) \
X(a, STATIC,   SINGULAR, UINT32,   internal_temperature_acquisition_period,  13) \
X(a, STATIC,   FIXARRAY, MESSAGE,  input_configuration,  20)
#define Configuration_CALLBACK NULL
#define Configuration_DEFAULT NULL
#define Configuration_MQTT_conf_MSGTYPE MQTTConfiguration
#define Configuration_timestamp_MSGTYPE Timestamp
#define Configuration_input_configuration_MSGTYPE InputConfiguration

#define UplinkMessage_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    type,              1) \
X(a, STATIC,   ONEOF,    MESSAGE,  (Data,history,Data.history),   2) \
X(a, STATIC,   ONEOF,    MESSAGE,  (Data,statistics,Data.statistics),   3) \
X(a, STATIC,   ONEOF,    MESSAGE,  (Data,events,Data.events),   4)
#define UplinkMessage_CALLBACK NULL
#define UplinkMessage_DEFAULT NULL
#define UplinkMessage_Data_history_MSGTYPE History
#define UplinkMessage_Data_statistics_MSGTYPE Statistics
#define UplinkMessage_Data_events_MSGTYPE Events

extern const pb_msgdesc_t Timestamp_msg;
extern const pb_msgdesc_t Position_msg;
extern const pb_msgdesc_t InputValue_msg;
extern const pb_msgdesc_t Event_msg;
extern const pb_msgdesc_t MQTTConfiguration_msg;
extern const pb_msgdesc_t AnalogInputConfiguration_msg;
extern const pb_msgdesc_t DigitalInputConfiguration_msg;
extern const pb_msgdesc_t TemperatureInputConfiguration_msg;
extern const pb_msgdesc_t InputData_msg;
extern const pb_msgdesc_t History_msg;
extern const pb_msgdesc_t Events_msg;
extern const pb_msgdesc_t Statistics_msg;
extern const pb_msgdesc_t InputConfiguration_msg;
extern const pb_msgdesc_t Configuration_msg;
extern const pb_msgdesc_t UplinkMessage_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define Timestamp_fields &Timestamp_msg
#define Position_fields &Position_msg
#define InputValue_fields &InputValue_msg
#define Event_fields &Event_msg
#define MQTTConfiguration_fields &MQTTConfiguration_msg
#define AnalogInputConfiguration_fields &AnalogInputConfiguration_msg
#define DigitalInputConfiguration_fields &DigitalInputConfiguration_msg
#define TemperatureInputConfiguration_fields &TemperatureInputConfiguration_msg
#define InputData_fields &InputData_msg
#define History_fields &History_msg
#define Events_fields &Events_msg
#define Statistics_fields &Statistics_msg
#define InputConfiguration_fields &InputConfiguration_msg
#define Configuration_fields &Configuration_msg
#define UplinkMessage_fields &UplinkMessage_msg

/* Maximum encoded size of messages (where known) */
#define AnalogInputConfiguration_size            22
#define Configuration_size                       742
#define DigitalInputConfiguration_size           180
#define Event_size                               34
#define Events_size                              37
#define History_size                             2003
#define InputConfiguration_size                  298
#define InputData_size                           247
#define InputValue_size                          16
#define MQTTConfiguration_size                   162
#define Position_size                            21
#define Statistics_size                          1129
#define TemperatureInputConfiguration_size       25
#define Timestamp_size                           22
#define UplinkMessage_size                       2008

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
